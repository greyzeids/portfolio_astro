---
import '../styles/global.css';
import { Image } from 'astro:assets';
import linkedinIcon from '../../public/icons/linkedin-white.svg';
import githubIcon from '../../public/icons/github-white.svg';

interface Props {
	title: string;
    bodyClass?: string; // Prop opcional para la clase del body
}

const { title, bodyClass = 'content-body' } = Astro.props;
---
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
</head>
<body class={bodyClass}>
    <header class="main-header">
        <nav>
            <ul>
                <li><a href="/"><span class="nav-glitch" data-text="Home">Home</span></a></li>
                <li><a href="/tech-stack"><span class="nav-glitch" data-text="Tech Stack">Tech Stack</span></a></li>
                <li><a href="/projects"><span class="nav-glitch" data-text="Projects">Projects</span></a></li>
                <li><a href="/about"><span class="nav-glitch" data-text="About Me">About Me</span></a></li>
            </ul>
        </nav>
        <div class="header-actions">
            <a href="https://www.linkedin.com/in/miquelcarnot/" target="_blank" aria-label="LinkedIn" rel="noopener" class="social-icon">
                <Image src={linkedinIcon} alt="LinkedIn" width={24} height={24} />
            </a>
            <a href="https://github.com/greyzeids" target="_blank" aria-label="GitHub" rel="noopener" class="social-icon">
                <Image src={githubIcon} alt="GitHub" width={24} height={24} />
            </a>
            <a href="/about#contact" class="connect-button-header">Let's Connect</a>
        </div>
    </header>

    <slot />
</body>

<script>
    // Detectar la página actual y marcar el enlace activo
    function setActiveNavLink() {
        const currentPath = window.location.pathname;
        const navLinks = document.querySelectorAll('.main-header nav a');
        
        navLinks.forEach(link => {
            const href = link.getAttribute('href');
            if (href === currentPath) {
                link.classList.add('active');
            } else {
                link.classList.remove('active');
            }
        });
    }

    // Ejecutar cuando el DOM esté listo
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', setActiveNavLink);
    } else {
        setActiveNavLink();
    }

    // --- NUEVO: Interceptar click en Tech Stack para animar el mecha ---
    document.addEventListener('DOMContentLoaded', () => {
        const techStackLink = Array.from(document.querySelectorAll('.main-header nav a')).find(a => a.getAttribute('href') === '/tech-stack');
        if (techStackLink) {
            techStackLink.addEventListener('click', function(e) {
                // Si existe la función global movePlayerToTechPlanet, la usamos
                const win = window as any;
                if (win.movePlayerToTechPlanet) {
                    e.preventDefault();
                    // Calcular la posición enfrente del planeta
                    const planetFront = win.getTechPlanetFrontPosition ? win.getTechPlanetFrontPosition(8) : { x: 0, y: 0, z: -8 };
                    console.log('Viajando a posición enfrente del planeta:', planetFront);
                    win.movePlayerToTechPlanet(planetFront, async () => {
                        // Al llegar, mostrar los logos alrededor del planeta si existe TechStackEffect
                        if (win.showTechLogos) {
                            win.showTechLogos();
                        }
                        // NO redirigir automáticamente - dejar que el usuario vea la animación
                        // window.location.href = '/tech-stack';
                    });
                }
            });
        }
    });
</script>
</html>